name: Python CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect Python files
        id: detect
        shell: bash
        run: |
          set -e
          count=$(git ls-files '*.py' | wc -l | tr -d ' ')
          echo "Gefundene Python-Dateien: $count"
          if [ "$count" -gt 0 ]; then
            echo "has_py=true" >> $GITHUB_OUTPUT
          else
            echo "has_py=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        if: steps.detect.outputs.has_py == 'true'
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        if: steps.detect.outputs.has_py == 'true'
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        if: steps.detect.outputs.has_py == 'true'
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Optional: Dev-Tools
          pip install flake8 pytest

      - name: Lint with flake8
        if: steps.detect.outputs.has_py == 'true'
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings (adjust max-line-length etc. as needed)
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

      - name: Run tests with pytest
        if: steps.detect.outputs.has_py == 'true'
        run: |
          code=0
          pytest -q || code=$?
          if [ "$code" -eq 5 ]; then
            echo "Keine Tests gefunden (pytest exit code 5) â€“ OK."
            exit 0
          else
            exit "$code"
          fi

      - name: Skip summary (no Python files)
        if: steps.detect.outputs.has_py != 'true'
        run: |
          echo "Python CI skipped: no .py files in repository."
